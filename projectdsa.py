{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5fb8a4b7",
   "metadata": {},
   "outputs": [],
   "source": [
    " \n",
    "import os\n",
    "os.system(\"tput setaf 2\")\n",
    "print(\"\\t\\t\\t\\twelcome to my menu\")\n",
    "os.system(\"espeak-ng -v en+m1 'long live arth 2.o' -s120\")\n",
    "print(\"\\t\\t\\t\\t ----------------\")\n",
    "print()\n",
    "os.system(\"tput setaf 6\")\n",
    "while True:\n",
    "\tprint('''\n",
    "               press 1: date\n",
    "               press 2: calender\n",
    "               press 3: list command\n",
    "               press 4: pwd\n",
    "\t       press 5: cowsay \n",
    "               press 6: another one of cowsay\n",
    "               press 7: funny train on cli\n",
    "               press 8:\n",
    "               press 9:reverse\n",
    "               press 10: factor\n",
    " \t       press 11:linear search\n",
    "               press 12:bineary search\n",
    "               press 13:bubble sort\n",
    "               press 14:insertion sort\n",
    "               press 15:selection sort\n",
    "\n",
    "                  ''')\n",
    "\tos.system(\"tput setaf 2\")\n",
    "\tos.system(\"espeak-ng -v en+m1 'please enter your choice' -s120\")\n",
    "\tprint(\"enter your choice\",end=' ' )\n",
    "\tch=input()\n",
    "\tprint(ch)\n",
    "\tif int(ch)==1:\n",
    "\t\tos.system(\"espeak-ng -v en+m1 'this is your today date' -s120\")\n",
    "\t\tos.system(\"date\")\n",
    "\telif int(ch)==2:\n",
    "\t\tos.system(\"espeak-ng -v en+m1 'this is your calender' -s120\")\n",
    "\t\tos.system(\"cal\")\n",
    "\telif int(ch)==3:\n",
    "\t\tos.system(\"espeak-ng -v en+m1 'this is list of folder' -s120\")\n",
    "\t\tos.system(\"ls\")\n",
    "\telif int(ch)==4:\n",
    "\t\tos.system(\"espeak-ng -v en+m1 'this is your recent dir' -s120\")\n",
    "\t\tos.system(\"pwd\")\n",
    "\telif int(ch)==5:\n",
    "\t\tos.system(\"espeak-ng -v en+m1 'this is your recent cowsay' -s120\")\n",
    "\t\tos.system(\"cowsay arth 2.0\")\n",
    "\telif int(ch)==6:\n",
    "\t\tos.system(\"espeak-ng -v en+m1 'this is your feature of cowsay' -s120\")\n",
    "\t\tos.system(\"cowsay -f meow PUSHPESH HERE\")\n",
    "\telif int(ch)==7:\n",
    "\t\tos.system(\"espeak-ng -v en+m1 'this is your recent sl' -s120\")\n",
    "\t\tos.system(\"sl\")\n",
    "\telif int(ch)==8:\n",
    "\t\tos.system(\"espeak-ng -v en+m1 'this is your recent reverse' -s120\")\n",
    "\t\tos.system(\"pwd\")\n",
    "\telif int(ch)==9:\n",
    "\t\tos.system(\"espeak-ng -v en+m1 'this is your recent dir' -s120\")\n",
    "\t\tos.system(\"rev\")\n",
    "\t\tprint(\"enter your choice\",end=' ' )\n",
    "\telif int(ch)==10:\n",
    "\t\tos.system(\"espeak-ng -v en+m1 'this is your recent factor of 10' -s120\")\n",
    "\t\tos.system(\"factor 10\")\n",
    "\telif int(ch)==11:\n",
    "\t\t#linear search\n",
    "\n",
    "\n",
    "\n",
    "\t\tdef search(lst,target):\n",
    "\n",
    "\t\t\tfor i in range(len(lst)):\n",
    "\t\t\t\tif lst[i]==target:\n",
    "\t\t\t\t\treturn i\n",
    "\n",
    "\n",
    "\t\t\treturn -1\n",
    "\n",
    "\n",
    "\t\tlst=[]# making empty list\n",
    "\n",
    "\t\tn=int(input(\"enter your no : \")) #taking no of input\n",
    "\n",
    "\t\tfor i in range(0,n):\n",
    "\t\t\tele=int(input())\n",
    "\t\t\tlst.append(ele)\n",
    "\n",
    "\t\tprint(lst)\n",
    "\t\ttarget=int(input(\"enter your search\"))#your saerching target\n",
    "\t\tans=search(lst,target)\n",
    "\t\tprint(ans)\n",
    "#########################################################################################3\n",
    "\telif int(ch)==12:\n",
    "\t\t#bineary search\n",
    "\n",
    "\n",
    "\n",
    "\t\tdef search(lst,target):\n",
    "\t\t\tlow=0\n",
    "\t\t\thigh=len(lst)-1\n",
    "\t\t\tmid=0\n",
    "\t\t\t\n",
    "\t\t\twhile low<=high:\n",
    "\n",
    "\t\t\t\tmid =(high+low)//2\n",
    "\n",
    "\t\t\t\t#if x is greater ,ignore left half\n",
    "\t\t\t\tif lst[mid]<target:\n",
    "\t\t\t\t\tlow=mid+1\n",
    "\n",
    "\t\t\t\t# if x is smaller,ignore right half\n",
    "\t\t\t\telif lst[mid]>target:\n",
    "\t\t\t\t\thigh=mid-1\n",
    "\t\t\t\telse:\n",
    "\t\t\t\t\treturn mid\n",
    "\n",
    "\t\t\treturn -1\n",
    "\t\n",
    "\n",
    "\t\tlst=[]# making empty list\n",
    "\n",
    "\t\tn=int(input(\"enter your sorted data no : \")) #taking no of input\n",
    "\n",
    "\t\tfor i in range(0,n):\n",
    "\t\t\tele=int(input())\n",
    "\t\t\tlst.append(ele)\n",
    "\n",
    "\t\tprint(lst)\n",
    "\t\ttarget=int(input(\"enter your search\"))#your saerching target\n",
    "\t\tans=search(lst,target)\n",
    "\t\tprint(ans)\n",
    "\n",
    "########################################################################################\n",
    "\telif int(ch)==13:\n",
    "\t\t#bubble sort\n",
    "\n",
    "\n",
    "\n",
    "\t\tdef bubblesort(lst):\n",
    "\t\t\t\n",
    "\t\t\t#\n",
    "\t\t\tfor i in range(0,len(lst)-1):\n",
    "\t\t\t\tfor j in range(len(lst)-1):\n",
    "\t\t\t\t\tif(lst[j]>lst[j+1]):\n",
    "\t\t\t\t\t\tlst[j],lst[j+1]=lst[j+1],lst[j]\n",
    "\n",
    "\t\t\treturn lst\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\t\tlst=[]# making empty list\n",
    "\n",
    "\t\tn=int(input(\"enter your random data  : \")) #taking no of input\n",
    "\n",
    "\t\tfor i in range(0,n):\n",
    "\t\t\tele=int(input())\n",
    "\t\t\tlst.append(ele)\n",
    "\n",
    "\t\tprint(lst)\n",
    "\t\t#target=int(input(\"enter your search\"))#your saerching target\n",
    "\t\tans=bubblesort(lst)\n",
    "\t\tprint(ans)\n",
    "########################################################################################\n",
    "\telif int(ch)==14:\n",
    "\t\t#insertion sort\n",
    "\t\tdef insertionsort(lst):\n",
    "\t\t\t\n",
    "\t\t\t#\n",
    "\t\t\tfor i in range(1,len(lst)):\n",
    "\t\t\t\tkey=lst[i]\n",
    "\t\t\t\tj=i-1\n",
    "\t\t\t\t\n",
    "\n",
    "\t\t\t\twhile j>=0 and key<lst[j]:\n",
    "\t\t\t\t\tlst[j+1]=lst[j]\n",
    "\t\t\t\t\tj-=1\n",
    "\t\t\t\tlst[j+1]=key\n",
    "\t\t\treturn lst\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\t\tlst=[]# making empty list\n",
    "\n",
    "\t\tn=int(input(\"enter your random data  : \")) #taking no of input\n",
    "\n",
    "\t\tfor i in range(0,n):\n",
    "\t\t\tele=int(input())\n",
    "\t\t\tlst.append(ele)\n",
    "\n",
    "\t\tprint(lst)\n",
    "\t\t#target=int(input(\"enter your search\"))#your saerching target\n",
    "\t\tans=insertionsort(lst)\n",
    "\t\tprint(ans)\n",
    "\n",
    "\n",
    "\t\t\n",
    "#####################################################################################\n",
    "\telif int(ch)==15:\n",
    "\t\t#selection sort\n",
    "\t\tdef selectionsort(lst):\n",
    "\t\t\t\n",
    "\t\t\t#\n",
    "\t\t\tfor i in range(len(lst)):\n",
    "\t\t\t\tmid_idx=i\n",
    "\t\t\t\tfor j in range(i+1,len(lst)):\n",
    "\t\t\t\t\tif lst[min_idx]>lst[j]:\n",
    "\t\t\t\t\t\tmid_idx=j\n",
    "\n",
    "\t\t\t\tlst[i],lst[min_idx]=lst[min_idx],lst[i]\n",
    "\t\t\treturn lst\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\t\tlst=[]# making empty list\n",
    "\n",
    "\t\tn=int(input(\"enter your random data  : \")) #taking no of input\n",
    "\n",
    "\t\tfor i in range(0,n):\n",
    "\t\t\tele=int(input())\n",
    "\t\t\tlst.append(ele)\n",
    "\n",
    "\t\tprint(lst)\n",
    "\t\t#target=int(input(\"enter your search\"))#your saerching target\n",
    "\t\tans=selectionsort(lst)\n",
    "\t\tprint(ans)\n",
    "\n",
    "\t\t\n",
    "\n",
    "\n",
    "##################################################################################\n",
    "\n",
    "\telse:\n",
    "\t\texit()\n",
    "\tinput()\n",
    "\tprint(\"enter any key\")\n",
    "\tos.system(\"clear\")\n",
    "\n",
    "\n",
    "\t\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
